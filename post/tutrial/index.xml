<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>个人博客 on DarckLH的Blog</title>
    <link>http://www.rmdarck18.xyz:1313/post/tutrial/</link>
    <description>Recent content in 个人博客 on DarckLH的Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 14 Aug 2021 01:50:38 +0800</lastBuildDate><atom:link href="http://www.rmdarck18.xyz:1313/post/tutrial/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>借助github以及hugo搭建静态的个人博客-0</title>
      <link>http://www.rmdarck18.xyz:1313/p/%E5%80%9F%E5%8A%A9github%E4%BB%A5%E5%8F%8Ahugo%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-0/</link>
      <pubDate>Fri, 13 Aug 2021 20:38:35 +0800</pubDate>
      
      <guid>http://www.rmdarck18.xyz:1313/p/%E5%80%9F%E5%8A%A9github%E4%BB%A5%E5%8F%8Ahugo%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-0/</guid>
      <description>此篇文章在于帮助对网络知识非常陌生的用户快速部署起一个轻量级的个人页面，但是因为这种事情多少涉及到一些技术层面的东西，很难说能够畅通无阻的就构建起自己的博客，只能说有问题多思考加留言吧。。
第一篇主要是讲一些环境准备和需要的软件。
环境准备 在正式开始上手前，我们需要做一些环境准备，何谓“环境&amp;quot;？
程序其实就像一种生物，鱼需要水，植物需要阳光，绝大部分动物都需要氧气，除了必备的生存条件之外还可以准备一些辅助的条件让生物更加满足，这些都可以称之为环境。这一部分主要是介绍搭建博客必要的环境，请准备好网络环境以及电脑。
 git（必要，进行代码管理必不可少的工具） Github（必要，这篇教程主要就是借助github代码托管实现个人博客） Gitee码云 （Github的替位选择，推荐国内环境用户使用） Shell（Windows平台推荐WindowsTerminal）、 MarkDown编辑器（MarkDown是一种标记语言，写文章会用到） 善于思考的大脑和愿意付出行动的双手    Git的安装 Git简介 git是一个分布式版本控制软件，最初由林纳斯·托瓦兹创作，于2005年以GPL发布。最初目的是为更好地管理Linux内核开发而设计。应注意的是，这与GNU Interactive Tools不同。 git最初的开发动力来自于BitKeeper和Monotone。 维基百科
上面这堆谜语来自wiki，举例说明吧。
好比你装一台电脑，整个过程存在非常多的状态，甚至装完之后还需要升级维护之类的需求。如果中间出了问题就要拆掉已经装好的部分回到出错的状态重新来过，非常折磨！现在出现了这么一个工具，它可以记录下一个时空节点的所有信息，比如在你装好CPU，装好内存，装好显卡的每个结束时刻你都可以记录下这一时空节点，还可以带上一些你的辅助信息，说明为啥要记录这个节点以及在这个节点你都做了些什么。这样当你出现了什么问题的时候你可以快速的检查到底出啥问题了，甚至返回到之前的时空节点将其修复！是不是非常酷炫？这还不是最酷的，结合下文会讲到的Github，甚至可以做到让别人克隆你的时空节点记录，将他的时空记录和你的合并起来！真是令人激动。当然，Git的进一步使用就需要各位深入学习了，此处只是为了方便大家理解后面的命令都在做什么。
Git的下载和安装 官网地址

根据自己系统选择，推荐选择Setup安装程序，下面的是便携版，涉及到环境变量注册表这些，不推荐萌新使用，下载下来后双击运行。保持默认选项一冲到底即可！当然，你也可以选择网络上查询相关资料再做决定。
安装完成过后你可以在任何一个地方鼠标右键看到这两个选项，这就代表安装完成了。
有关Git的上手使用可以参考我的另一篇文章！
  Github以及Gitee账号  Github简介 GitHub是通过Git进行版本控制的软件源代码托管服务平台，由GitHub公司的开发者Chris Wanstrath、P. J. Hyett和汤姆·普雷斯顿·沃纳使用Ruby on Rails编写而成。 GitHub同时提供付费账户和免费账户。这两种账户都可以创建公开或私有的代码仓库，但付费用户支持更多功能。 维基百科
wiki对于完全没有基础的人确实有点麻哦，还是举例说明吧。
比如你是一个画家，你非常喜欢在网络上分享自己的绘画作品，有一天你突然萌生了一个奇妙的想法，假如我可以发布我作品的源文件，让大家一起来完成作品会怎么样？于是你发布了作品的psd或者是其它可以编辑的文件到一个网络上的仓库中，并且告诉所有人可以随意编辑你这个仓库里的作品。现在，其他人就可以下载你的作品，在他们的电脑上完成了工作后再发布到你的作品仓库里，或者单纯下载下来欣赏使用，这是开源的体现。
网络上建立仓库（存储空间）是需要消耗资源的，github提供给了用户一定的免费资源，大量用户之间则构建起了一个交流的社区，然后把这个例子中的绘画作品换成代码就可以简单理解github以及开源社区是什么了。
 注册gitee账号 国内网络环境比较推荐gitee，方便且速度快，中文环境便于学习使用。缺点就是考虑到国内政治因素以及各类安全需求有比较多的限制，也需要实名认证，当然这其实无可厚非，看各位如何取舍吧。
访问码云注册
请仔细阅读gitee给出的说明哦，个人空间取个好点的名字。注册完后登陆，然后按照网页的提示把手机号码绑定，还有实名认证，请准备好身份证的正反面各一张，还有一张手持身份证的照片（电脑上推荐大家平时就准备好这些证件照放在一个文件夹里，便于取用，在手机上访问网页的话也许可以直接拍照上传），实名认证需要大约1-2个工作日完成，完成过后才能启用gitee的页面托管服务。
 创建Gitee仓库 登录到你的个人首页，点击左下角的加号按钮


这个仓库名最好和你注册时填写的个人空间名一样哦，这样的话你就可以直接通过这种形式http://darcklh.gitee.io/的域名访问你的个人博客，否则好像是还要加上一个2级域名，其它的保持默认选项即可，后面有变化也可以修改。注意到右上角的导入了吗，gitee可以直接同步github的仓库，要善于利用哦！
 注册github账号 访问这个链接github.com，来到github官网，找到右上角的Sign up按钮。
接下来就是github的注册信息界面了，做的很漂亮，如果网络条件不好的话请多等待一下，或者挂上梯子再试试。这部分不予赘述，就是一个注册流程，也没啥限制的。
完成注册后来到个人的首页。
 创建Github仓库 有了账号还需要仓库来存放你的博客，创建仓库也是非常简单的，但是注意个人博客类的仓库命名需要一定规范，这就是唯一需要注意的地方了。点击那个Repositories按钮，然后New</description>
    </item>
    
    <item>
      <title>借助github以及hugo搭建静态的个人博客-1</title>
      <link>http://www.rmdarck18.xyz:1313/p/%E5%80%9F%E5%8A%A9github%E4%BB%A5%E5%8F%8Ahugo%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-1/</link>
      <pubDate>Fri, 13 Aug 2021 20:38:35 +0800</pubDate>
      
      <guid>http://www.rmdarck18.xyz:1313/p/%E5%80%9F%E5%8A%A9github%E4%BB%A5%E5%8F%8Ahugo%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-1/</guid>
      <description>&lt;p&gt;还没写哦&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
